LOCAL MODE PIG EXECUTION
-------------------------------------------------------------------------------------------------------------
gopalkrishna@ubuntu:~/Desktop/pig/input$ pig -x local 
-------------------------------------------------------------------------------------------------------------

A = LOAD 'Weather_Forecast_Report_US.log'using PigStorage('|'); 
B = FOREACH A GENERATE $0 , $1;
DUMP B;

A = LOAD 'Weather_Forecast_Report_US.log' using PigStorage('|');
B = FOREACH A GENERATE $0 , $1;
STORE B INTO 'OUTPUT90';

DUMP & STORE are also known as output generator command.
DUMP use to display output on the console & STORE will generate output as part-m or part-r file.
Default delimiter in the DUMP command is comma.
Default delimiter in the STORE command is Tab Space.

A = LOAD 'Weather_Forecast_Report_US.log' using PigStorage('|');
B = FOREACH A GENERATE $0,$1;
STORE B INTO 'OUTPUT91' using PigStorage('|');

A = LOAD 'Weather_Forecast_Report_US.log' using PigStorage('|');
B = FOREACH A GENERATE $0 , $1, $4+10;
STORE B INTO 'OUTPUT93' using PigStorage('-');

A = LOAD 'Weather_Forecast_Report_US.log' using PigStorage('|') S (id:chararray, name:chararray,cond:chararray,prec:chararray,rain:int);
B = FILTER A BY rain>=90;
STORE B INTO 'OUTPUT94';

A = load '/home/gopalkrishna/Desktop/pig/input/empdata.log' using PigStorage('|') as (id:int, name:chararray, sal:int, area:chararray);
B = Filter A by area=='Hyderabad';
C = order A by name asc;
Dump C;

A = load '/home/gopalkrishna/Desktop/pig/input/Tsunamis_Deadlist_Information.log' using PigStorage('\t') as (date:chararray, loc:chararray, qty:int, area:chararray);
B = Filter A by loc=='Japan';
C = order B by area asc;
Dump C;

A = load '/home/gopalkrishna/Desktop/pig/input/Weather_Forecast_Report_US.log' using PigStorage('|') as (id:chararray,area:chararray,forecast:chararray,result:chararray,rate:int);
B = Filter A by rate>=50;
Dump B;

A = LOAD '/home/gopalkrishna/Desktop/pig/input/empdata.log' using PigStorage('|') as (id:chararray,name:chararray,sal:chararray,area:chararray);
SPLIT A INTO P IF area=='Pune',Q IF area=='Hyderabad',R if area=='Mumbai'; 
STORE P INTO 'P1SPLIT';STORE Q INTO 'Q1SPLIT'; STORE R INTO 'R1SPLIT';

A = LOAD '/home/gopalkrishna/Desktop/pig/input/Weather_Forecast_Report_US.log' using PigStorage('|') as (id:chararray, loc:chararray, forecast:chararray, per:chararray,rate:int);
SPLIT A INTO P IF forecast=='Light Rain', Q IF forecast=='T-storms', R if forecast=='Cloudy' ; 
STORE P INTO 'PSPLIT001';STORE Q INTO 'QSPLIT001';STORE R INTO 'RSPLIT001';

A = LOAD '/home/gopalkrishna/Desktop/pig/input/empdata.log' using PigStorage('|') as (cid:int,cname:chararray,cheadcnt:int,cloc:chararray);
B = FILTER A BY cloc == 'Pune';
C = ORDER B BY cname;
STORE B INTO 'FILTEROUT';STORE C INTO 'ORDERBYOUT';

FILTER V/S SPLIT
Both the transformation will be used to get some result out of some condition however, when we are using filter transforamtion only 
one output will be generated irrespective of the number of condition what we are providing 
where as 
Split transformation will produce atleast provide 2 output as per the design. 

DIAGNOSTIC OPERATOR:
	1. describe <operator name>
	2. illustrate <operator name>
	3. explain <operatorname>
 
UNION
A = load 'data1.log' using PigStorage('\t') as (id:int, name:chararray, sal:int);
B = load 'data2.log' using PigStorage('\t') as (id:int, name:chararray, sal:int);
C = union A,B;
Dump C;

CROSS
A = load 'data1.log' using PigStorage('\t') as (id:int, name:chararray, sal:int);
B = load 'data2.log' using PigStorage('\t') as (id:int, name:chararray, sal:int);
C = cross A,B;
Dump C; / store C into 'out007';

JOIN
A = load 'data1.log' using PigStorage('\t') as (id:int, name:chararray, sal:int);
B = load 'data2.log' using PigStorage('\t') as (id:int, name:chararray, sal:int);
C = join A by id ,B by id;
Dump C; / store C into 'out007';

LEFT OUTER JOIN
A = load 'data1.log' using PigStorage('\t') as (id:int, name:chararray, sal:int);
B = load 'data2.log' using PigStorage('\t') as (id:int, name:chararray, sal:int);
C = JOIN A by id left outer,B by id ;
Dump C; / Store C into 'out007';

RIGHT OUTER JOIN
A = load 'data1.log' using PigStorage('\t') as (id:int, name:chararray, sal:int);
B = load 'data2.log' using PigStorage('\t') as (id:int, name:chararray, sal:int);
C = JOIN A by id right,B by id ;
Dump C; / Store C into 'out007';

FULL OUTER JOIN
A = load 'data1.log' using PigStorage('\t') as (id:int, name:chararray, sal:int);
B = load 'data2.log' using PigStorage('\t') as (id:int, name:chararray, sal:int);
C = JOIN A by id full outer,B by id ;
Dump C; / Store C into 'out007';

GROUP BY
A = load 'empdata.log' using PigStorage('\t') as (id:int, name:chararray, sal:int, loc:chararray);
B = Group A by loc;
Dump B;

GROUP BY / PARALLEL
A = load 'Weather_Forecast_Report_US.log' using PigStorage('|') as (id:chararray,name:chararray,forecast:chararray, rain:chararray,rate:int);
B = Group A by forecast parallel 4;
Dump B;

COGROUP BY (Same as group by but can be used for multiple tables)
A = load 'student.log' using PigStorage(',') as (id:int, name:chararray, age:int, contact:long,loc:chararray);
B = load 'employee.log' using PigSgtorage(',') as (id:int, name:chararray,age:int,loc:chararray);
C = COGROUP A by age, B by age;
Dump C;

------------------------------------------------------------------------------------------------------------------------------
Note: The GROUP and COGROUP operators are identical. Both operators work with one or more relations.
For readability, GROUP is used in statements involving one relation and COGROUP is used in statements involving two or more relations.
You can COGROUP up to but no more than 127 relations at a time.
------------------------------------------------------------------------------------------------------------------------------

TOKENIZE (Divide a string into an array)
A = load 'tokendata.log' using PigStorage('\n') as (line:chararray);
B = foreach A generate TOKENIZE(line);
dump B;

FLATTEN 
[FLATTEN  commands always read nested data only as i/p data.
However flatten command is used for the unnesting of nested data.
Flatten command will not directly read the variable which consist of the nested ouptut, Instead it will read the 
variable of the base data on which nesting happened.]

A = load 'tokenData.log' using PigStorage('\n') as (line:chararray);
B = foreach A generate FLATTEN(TOKENIZE(line));
dump B;

A = load 'Tsunamis_Deadlist_Information.log' using PigStorage('\t') as (date:chararray, country:chararray, number:int, loc:chararray);
B = foreach A generate FLATTEN(TOKENIZE(country));
C = distinct B;
dump C;

---AGGREGATE FUNCTION[MIN,MAX,AVG,SUM,COUNT]--------------------------------

A = load 'Tsunamis_Deadlist_Information.log' using PigStorage('\t') as (date:chararray, country:chararray, number:int, loc:chararray);
B = group A by loc;
C = Foreach B generate group as G1, MIN(A.number),MAX(A.number),AVG(A.number);
Dump C;

A = load 'empdata.log' using PigStorage('|') as (id:int, name:chararray,sal:int,loc:chararray);
B = Group A all;
C = foreach B generate group ,MAX(A.sal),MIN(A.sal);
Dump C;

A = load 'empdata.log' using PigStorage('|') as (id:int, name:chararray,sal:int,loc:chararray);
B = Group A by loc;
C = foreach B generate group ,MAX(A.sal);
Dump C;

A = load 'Weather_Forecast_Report_US.log' using PigStorage('|') as (name:chararray, area:chararray, forecast:chararray, rain:chararray, rate:int);
B = Group A by forecast;
C = foreach B generate group ,MAX(A.rate);
Dump C;

---SCRIPT [ pig -x local <scriptname.pig> ] -------------------------------------------------------------------------------------

LOCATION:   /home/gopalkrishna/Desktop/pig/input/<filename.pig>

1.aggmax.pig
A = LOAD 'empdata.log' using PigStorage('|') as (id:int, name:chararray, sal:int,loc:chararray);
B = GROUP A by loc;
C = FOREACH B GENERATE group AS loc, MAX(A.sal),MIN(A.sal);
DUMP C;

2.Parallel.pig
A = LOAD 'empdata.log' using PigStorage('|') as (id:int, name:chararray, sal:int ,loc:chararray);
B = GROUP A by name parallel 3;
STORE B INTO 'parallel_92';

[3 reduce file will be generated but some of them will be empty.
so to remove the empty file generation we will use the lazy file concept.
shown in lazyparallel.pig]

3. lazyparallel.pig
 
In INSTALL/pig-0.15.0/conf/pig.properties  set 
set.pig.output.lazy = true;

A = LOAD 'empdata.log' using PigStorage('|') as (id:int, name:chararray,sal:int ,loc:chararray);
B = GROUP A by name parallel 8;
STORE B INTO 'lazyout020';

4.datawithnull.pig

A = LOAD 'datawithnull.log' using PigStorage('\t') as (id:int, name:chararray, sal:int);
B = FOREACH A GENERATE * AS completeRecord;
C = FILTER B by completeRecord is not null;
D = FILTER C by name is not null;
Dump D;

5.Aggregate.pig 

A = load 'Weather_Forecast_Report_US.log' using PigStorage('|') as (name:chararray, area:chararray, forecast:chararray, rain:chararray, rate:int);
B = Group A by forecast;
C = foreach B generate group ,MAX(A.rate);
Dump C;

6.XML processing

A>  xml001.pig
REGISTER '/home/gopalkrishna/Desktop/pig/xml/piggybank.jar';
A = load '/home/gopalkrishna/Desktop/pig/xml/technology.xml' using org.apache.pig.piggybank.storage.XMLLoader('author') as (doc:chararray);
B = order A by doc ;
Dump B;

B. xml002.pig
REGISTER '/home/gopalkrishna/Desktop/pig/xml/piggybank.jar';
A = load '/home/gopalkrishna/Desktop/pig/xml/technology.xml' using org.apache.pig.piggybank.storage.XMLLoader('author') as (doc:chararray);
B = order A BY doc;
Dump B;

C. s5.pig
REGISTER '/home/gopalkrishna/Desktop/pig/xml/piggybank.jar';
A = load '/home/gopalkrishna/Desktop/pig/xml/technology.xml' using org.apache.pig.piggybank.storage.XMLLoader('name') as (doc:chararray);
B = order A by doc asc;
Dump B;


7. JSon processing in pig 

A = LOAD 'data.json' using JsonLoader('food:chararray, person:chararray,amount:int');
B = Foreach A generate food,person,amount;
C = order B by food;
Dump C;  

A = LOAD 'data2.json' USING JsonLoader('recipe:chararray, 
					ingredients:{(name:chararray)},
					inventor: (name:chararray,age:int)');

B = FOREACH A GENERATE recipe,ingredients,inventor;
DUMP B;
 

8. WORDCOUNT

A = LOAD 'wcinput.txt' as (line:chararray);
B = foreach A generate FLATTEN(TOKENIZE(line)) as word;
C = Group B by word;
D = foreach C generate group,COUNT(B.word);
Dump D;


9. Parameter Passing

create a file p1.log
para1.pig
A = load '<LOCAL filename Path>'  as (number:int);
B = filter A by number == '$pass';    			
--(Single quotes if chararray,if number then no need of single quotes)               
Dump B;

Running the scripts: pig -param pass=10 -x local para1.pig


9. DEFINE keyword in Pig:

In order to assign a alias name fro any user defined function we can use define keyword in the pigscript.
DEFINE XPath org.apachepig.pigybank.evaluation.xml.Xpath();
In the above command XPath is alias name.











